// <auto-generated />
using System;
using ASI.Basecode.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASI.Basecode.Data.Migrations
{
    [DbContext(typeof(AsiBasecodeDBContext))]
    partial class AsiBasecodeDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASI.Basecode.Data.Models.Book", b =>
                {
                    b.Property<string>("bookId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isbn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pubYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("synopsis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            bookId = "1",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Ransom Riggs",
                            image = "/seeder/1.jpg",
                            isbn = "ISBN-9781594746031",
                            language = "English",
                            pubYear = "2011",
                            publisher = "Quirk Books",
                            synopsis = "When Jacob discovers clues to a mystery that spans different worlds and times, he finds a magical place known as Miss Peregrine's Home for Peculiar Children.",
                            title = "Miss Peregrine's Home for Peculiar Children"
                        },
                        new
                        {
                            bookId = "2",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Ransom Riggs",
                            image = "/seeder/2.jpg",
                            isbn = "ISBN-9781594747359",
                            language = "English",
                            pubYear = "2014",
                            publisher = "Quirk Books",
                            synopsis = "Having escaped Miss Peregrine's island by the skin of their teeth, Jacob and his new friends journey to London, the peculiar capital of the world.",
                            title = "Hollow City: The Second Novel of Miss Peregrine's Peculiar Children"
                        },
                        new
                        {
                            bookId = "3",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Ransom Riggs",
                            image = "/seeder/3.jpg",
                            isbn = "ISBN-9781594747588",
                            language = "English",
                            pubYear = "2015",
                            publisher = "Quirk Books",
                            synopsis = "A boy with extraordinary powers. An army of deadly monsters. An epic battle for the future of peculiardom.",
                            title = "Library of Souls: The Third Novel of Miss Peregrine's Peculiar Children"
                        },
                        new
                        {
                            bookId = "4",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Ransom Riggs",
                            image = "/seeder/4.jpg",
                            isbn = "ISBN-9780735232143",
                            language = "English",
                            pubYear = "2018",
                            publisher = "Penguin Random House",
                            synopsis = "Having defeated the monstrous threat that nearly destroyed the peculiar world, Jacob Portman is back where his story began, in Florida.",
                            title = "A Map of Days: The Fourth Novel of Miss Peregrine's Peculiar Children"
                        },
                        new
                        {
                            bookId = "5",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Ransom Riggs",
                            image = "/seeder/5.jpg",
                            isbn = "ISBN-9780735232144",
                            language = "English",
                            pubYear = "2020",
                            publisher = "Penguin Random House",
                            synopsis = "The adventure that began with Miss Peregrine's Home for Peculiar Children and continued in A Map of Days comes to a thrilling conclusion.",
                            title = "The Conference of the Birds: The Fifth Novel of Miss Peregrine's Peculiar Children"
                        },
                        new
                        {
                            bookId = "6",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Alex Michaelides",
                            image = "/seeder/6.jpg",
                            isbn = "ISBN-9781250301697",
                            language = "English",
                            pubYear = "2019",
                            publisher = "Celadon Books",
                            synopsis = "Alicia Berenson's life is seemingly perfect until she shoots her husband and then never speaks another word. Theo Faber, a criminal psychotherapist, is determined to unravel her mystery.",
                            title = "The Silent Patient"
                        },
                        new
                        {
                            bookId = "7",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Delia Owens",
                            image = "/seeder/7.jpg",
                            isbn = "ISBN-9780735219091",
                            language = "English",
                            pubYear = "2018",
                            publisher = "G.P. Putnam's Sons",
                            synopsis = "A mystery tale of Kya Clark, known as the Marsh Girl, accused of the murder of Chase Andrews in the quiet town of Barkley Cove.",
                            title = "Where the Crawdads Sing"
                        },
                        new
                        {
                            bookId = "8",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Erin Morgenstern",
                            image = "/seeder/8.jpg",
                            isbn = "ISBN-9780307744432",
                            language = "English",
                            pubYear = "2011",
                            publisher = "Doubleday",
                            synopsis = "Two young illusionists, Celia and Marco, are bound in a magical competition, unaware that it's a battle where only one can survive.",
                            title = "The Night Circus"
                        },
                        new
                        {
                            bookId = "9",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Tara Westover",
                            image = "/seeder/9.jpg",
                            isbn = "ISBN-9780399590504",
                            language = "English",
                            pubYear = "2018",
                            publisher = "Random House",
                            synopsis = "A memoir recounting Tara Westover's inspiring journey from growing up in a strict survivalist family in Idaho to earning a Ph.D. from Cambridge University.",
                            title = "Educated"
                        },
                        new
                        {
                            bookId = "10",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "F. Scott Fitzgerald",
                            image = "/seeder/10.jpg",
                            isbn = "ISBN-9780743273565",
                            language = "English",
                            pubYear = "1925",
                            publisher = "Charles Scribner's Sons",
                            synopsis = "Jay Gatsby's extravagant parties and his pursuit of Daisy Buchanan, set against the backdrop of 1920s Long Island, ultimately leading to tragic consequences.",
                            title = "The Great Gatsby"
                        },
                        new
                        {
                            bookId = "11",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Paulo Coelho",
                            image = "/seeder/11.jpg",
                            isbn = "ISBN-9780062315007",
                            language = "English",
                            pubYear = "1988",
                            publisher = "HarperCollins",
                            synopsis = "Follows the journey of Santiago, an Andalusian shepherd boy, as he travels in search of a worldly treasure.",
                            title = "The Alchemist"
                        },
                        new
                        {
                            bookId = "12",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Harper Lee",
                            image = "/seeder/12.jpg",
                            isbn = "ISBN-9780061120084",
                            language = "English",
                            pubYear = "1960",
                            publisher = "J. B. Lippincott & Co.",
                            synopsis = "A classic novel set in the American South during the 1930s, dealing with the issues of racial injustice and moral growth through the eyes of Scout Finch.",
                            title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            bookId = "13",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "George Orwell",
                            image = "/seeder/13.jpg",
                            isbn = "ISBN-9780451524935",
                            language = "English",
                            pubYear = "1949",
                            publisher = "Secker & Warburg",
                            synopsis = "George Orwell's dystopian novel explores a totalitarian society controlled by a single party led by Big Brother.",
                            title = "1984"
                        },
                        new
                        {
                            bookId = "14",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "J.D. Salinger",
                            image = "/seeder/14.jpg",
                            isbn = "ISBN-9780316769488",
                            language = "English",
                            pubYear = "1951",
                            publisher = "Little, Brown and Company",
                            synopsis = "Narrates the experiences of Holden Caulfield, a disenchanted teenager navigating life and dealing with societal phoniness.",
                            title = "The Catcher in the Rye"
                        },
                        new
                        {
                            bookId = "15",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "J.R.R. Tolkien",
                            image = "/seeder/15.jpg",
                            isbn = "ISBN-9780261102217",
                            language = "English",
                            pubYear = "1937",
                            publisher = "Allen & Unwin",
                            synopsis = "The story of Bilbo Baggins, a hobbit who embarks on an adventurous journey to help a group of dwarves reclaim their homeland.",
                            title = "The Hobbit"
                        },
                        new
                        {
                            bookId = "16",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Rhiannon Frater",
                            image = "/seeder/16.jpg",
                            isbn = "ISBN-9780765331267",
                            language = "English",
                            pubYear = "2008",
                            publisher = "Tor Books",
                            synopsis = "Katie is driving to work one beautiful day when a dead man jumps into her car and tries to eat her.  That same morning, Jenni opens a bedroom door to find her husband devouring their toddler son. ",
                            title = "The First Days"
                        },
                        new
                        {
                            bookId = "17",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Jane Austen",
                            image = "/seeder/17.jpg",
                            isbn = "ISBN-9780141199078",
                            language = "English",
                            pubYear = "1813",
                            publisher = "T. Egerton, Whitehall",
                            synopsis = "A romantic novel revolving around Elizabeth Bennet and Mr. Darcy, exploring societal norms, love, and misunderstandings.",
                            title = "Pride and Prejudice"
                        },
                        new
                        {
                            bookId = "18",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Aldous Huxley",
                            image = "/seeder/18.jpg",
                            isbn = "ISBN-9780099518471",
                            language = "English",
                            pubYear = "1932",
                            publisher = "Chatto & Windus",
                            synopsis = "A dystopian novel portraying a future society controlled by technology, conformity, and conditioning.",
                            title = "Brave New World"
                        },
                        new
                        {
                            bookId = "19",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "J.R.R. Tolkien",
                            image = "/seeder/19.jpg",
                            isbn = "ISBN-9780261102361",
                            language = "English",
                            pubYear = "1954",
                            publisher = "Allen & Unwin",
                            synopsis = "A fantasy epic that chronicles the quest to destroy the One Ring and defeat the Dark Lord Sauron.",
                            title = "The Lord of the Rings"
                        },
                        new
                        {
                            bookId = "20",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "C.S. Lewis",
                            image = "/seeder/20.jpg",
                            isbn = "ISBN-9780066238500",
                            language = "English",
                            pubYear = "1950",
                            publisher = "Geoffrey Bles",
                            synopsis = "A series of high-fantasy novels depicting the adventures in the magical land of Narnia.",
                            title = "The Chronicles of Narnia"
                        },
                        new
                        {
                            bookId = "21",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Robert T. Kiyosaki",
                            image = "/seeder/21.jpg",
                            isbn = "ISBN-9781612680194",
                            language = "English",
                            pubYear = "1997",
                            publisher = "Plata Publishing",
                            synopsis = "The book explores the mindset and financial knowledge needed to succeed financially, based on the author's experiences.",
                            title = "Rich Dad Poor Dad"
                        },
                        new
                        {
                            bookId = "22",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "James Clear",
                            image = "/seeder/22.jpg",
                            isbn = "ISBN-9780735211293",
                            language = "English",
                            pubYear = "2018",
                            publisher = "Avery",
                            synopsis = "A guide to creating good habits, breaking bad ones, and mastering the tiny behaviors that lead to remarkable results.",
                            title = "Atomic Habits"
                        },
                        new
                        {
                            bookId = "23",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Steven Pressfield",
                            image = "/seeder/23.jpg",
                            isbn = "ISBN-9780553580532",
                            language = "English",
                            pubYear = "1998",
                            publisher = "Bantam",
                            synopsis = "A historical novel that retells the story of the Battle of Thermopylae from the perspective of the Spartans.",
                            title = "Gates of Fire"
                        },
                        new
                        {
                            bookId = "24",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Herman Melville",
                            image = "/seeder/24.jpg",
                            isbn = "ISBN-9780142437247",
                            language = "English",
                            pubYear = "1851",
                            publisher = "Richard Bentley",
                            synopsis = "An epic saga of Captain Ahab's obsessive quest for revenge against the white whale, Moby Dick.",
                            title = "Moby-Dick"
                        },
                        new
                        {
                            bookId = "25",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            author = "Douglas Adams",
                            image = "/seeder/25.jpg",
                            isbn = "ISBN-9780345391803",
                            language = "English",
                            pubYear = "1979",
                            publisher = "Pan Books",
                            synopsis = "A comedic science fiction series following the misadventures of an unwitting human, Arthur Dent.",
                            title = "The Hitchhiker's Guide to the Galaxy"
                        });
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.BookGenres", b =>
                {
                    b.Property<string>("bookId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("genreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("bookId", "genreId");

                    b.HasIndex("genreId");

                    b.ToTable("Book_Genres");

                    b.HasData(
                        new
                        {
                            bookId = "1",
                            genreId = "1",
                            Id = 0
                        },
                        new
                        {
                            bookId = "2",
                            genreId = "2",
                            Id = 0
                        },
                        new
                        {
                            bookId = "3",
                            genreId = "3",
                            Id = 0
                        },
                        new
                        {
                            bookId = "4",
                            genreId = "4",
                            Id = 0
                        },
                        new
                        {
                            bookId = "5",
                            genreId = "5",
                            Id = 0
                        });
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.Genre", b =>
                {
                    b.Property<string>("genreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("genreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("genreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            genreId = "1",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Exploring futuristic concepts",
                            genreName = "Science Fiction"
                        },
                        new
                        {
                            genreId = "2",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Intriguing puzzles and suspense",
                            genreName = "Mystery"
                        },
                        new
                        {
                            genreId = "3",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Imaginary worlds and magical elements",
                            genreName = "Fantasy"
                        },
                        new
                        {
                            genreId = "4",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Love and relationships",
                            genreName = "Romance"
                        },
                        new
                        {
                            genreId = "5",
                            CreatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Intense suspense and excitement",
                            genreName = "Thriller"
                        });
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiresUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssuedUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.Review", b =>
                {
                    b.Property<string>("reviewId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("bookId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("content")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("dateReviewed")
                        .HasColumnType("datetime2");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<string>("reviewerEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("reviewerFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("reviewerLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("reviewId");

                    b.HasIndex("bookId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            reviewId = "1",
                            bookId = "1",
                            content = "Sample content",
                            dateReviewed = new DateTime(2023, 11, 25, 23, 20, 1, 863, DateTimeKind.Local).AddTicks(9991),
                            rating = 4,
                            reviewerEmail = "test@gmail.com",
                            reviewerFirstName = "test",
                            reviewerLastName = "test"
                        },
                        new
                        {
                            reviewId = "2",
                            bookId = "1",
                            content = "Wow this is a great book!",
                            dateReviewed = new DateTime(2023, 11, 25, 23, 20, 1, 864, DateTimeKind.Local).AddTicks(9),
                            rating = 5,
                            reviewerEmail = "test2@gmail.com",
                            reviewerFirstName = "Aloysius",
                            reviewerLastName = "Beronque"
                        },
                        new
                        {
                            reviewId = "3",
                            bookId = "1",
                            content = "Slow pacing, got bored of it immediately.",
                            dateReviewed = new DateTime(2023, 11, 25, 23, 20, 1, 864, DateTimeKind.Local).AddTicks(11),
                            rating = 2,
                            reviewerEmail = "test3@gmail.com",
                            reviewerFirstName = "Karen",
                            reviewerLastName = "Miller"
                        },
                        new
                        {
                            reviewId = "4",
                            bookId = "1",
                            content = "Very nice Story. Impressive writing by the Author.",
                            dateReviewed = new DateTime(2023, 11, 25, 23, 20, 1, 864, DateTimeKind.Local).AddTicks(12),
                            rating = 5,
                            reviewerEmail = "www@gmail.com",
                            reviewerFirstName = "Aloysius",
                            reviewerLastName = "Beronque"
                        },
                        new
                        {
                            reviewId = "5",
                            bookId = "1",
                            content = "A good read.",
                            dateReviewed = new DateTime(2023, 11, 25, 23, 20, 1, 864, DateTimeKind.Local).AddTicks(14),
                            rating = 5,
                            reviewerEmail = "qwerty@gmail.com",
                            reviewerFirstName = "Enrique",
                            reviewerLastName = "Pacudan"
                        },
                        new
                        {
                            reviewId = "6",
                            bookId = "1",
                            content = "Not the best out of everything, but still very good nonetheless. I slightly teared up right before the ending part.",
                            dateReviewed = new DateTime(2023, 11, 25, 23, 20, 1, 864, DateTimeKind.Local).AddTicks(16),
                            rating = 4,
                            reviewerEmail = "abc@gmail.com",
                            reviewerFirstName = "Aaron",
                            reviewerLastName = "Alcuitas"
                        });
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "UQ__Users__1788CC4D5F4A160F")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.BookGenres", b =>
                {
                    b.HasOne("ASI.Basecode.Data.Models.Book", "book")
                        .WithMany("BookGenres")
                        .HasForeignKey("bookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASI.Basecode.Data.Models.Genre", "genre")
                        .WithMany("BookGenres")
                        .HasForeignKey("genreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("book");

                    b.Navigation("genre");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.Review", b =>
                {
                    b.HasOne("ASI.Basecode.Data.Models.Book", "book")
                        .WithMany("Reviews")
                        .HasForeignKey("bookId");

                    b.Navigation("book");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.Book", b =>
                {
                    b.Navigation("BookGenres");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("ASI.Basecode.Data.Models.Genre", b =>
                {
                    b.Navigation("BookGenres");
                });
#pragma warning restore 612, 618
        }
    }
}
