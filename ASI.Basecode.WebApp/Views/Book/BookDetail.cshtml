@using ASI.Basecode.Data.Models;
@model ASI.Basecode.Data.Models.Book
@{
    ViewBag.LoginView = true;
    ViewData["Title"] = "BiblioBibuli - Library";
}
@section styles {
    <link rel="stylesheet" href="~/css/bookdetail.css" />
    <link rel="stylesheet" href="~/css/review.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

}
<div class="navbar">
    <img class="bibliobibuli-logo" src="~/img/bibliobibuli logo 2.png" />
    <div class="navbar-right">
        <ul class="nav-links">
            <li><a href="/">Home</a></li>
            <li><a href="/Home/Library">Library</a></li>
        </ul>
    </div>
</div>
<div class="body-two-section">
    <div class="content">
        <div class="book-details">
            <div class="book-image">
                <img src="@Model.image" alt="Book Image" class="book-detail-image" />
            </div>
            <div class="book-info">
                <div class="book-title">@Model.title</div>
                <div class="book-author"><p class="book-author-title">Author:&nbsp;</p>@Model.author</div>
                <div class="book-genres">
                    @foreach (var genre in (IEnumerable<Genre>)ViewData["Genres"])
                    {
                        <div class="book-genre">@genre.genreName</div>
                    }
                </div>
                <div class="book-synopsis">@Model.synopsis</div>
                <div class="book-other-details">
                    <div class="book-darkblue">ISBN: @Model.isbn</div>
                    <div class="book-lightblue">Language: @Model.language</div>
                    <div class="book-darkblue">Publisher: @Model.publisher</div>
                    <div class="book-lightblue">Year Published: @Model.pubYear</div>
                </div>
            </div>
        </div>
        @if (ViewData["Reviews"] != null)
        {
            var reviews = (IEnumerable<ASI.Basecode.Data.Models.Review>)ViewData["Reviews"];
            var totalRatings = 0;
            var totalReviews = reviews.Count();
            var ratingsCount = new int[5];

            foreach (var review in reviews)
            {
                totalRatings += review.rating;
                ratingsCount[review.rating - 1]++;
            }

            double[] percentages = new double[5];
            decimal averageRating = totalRatings > 0 ? (decimal)totalRatings / totalReviews : 0;
            decimal averageRatingRounded = Math.Round(averageRating, 1);
            int roundedRating = (int)Math.Round(averageRating);


            for (int i = 0; i < 5; i++)
            {
                percentages[i] = totalReviews > 0 ? ((double)ratingsCount[i] / totalReviews) * 100 : 0;
            }

            <div class="review-details-row">
                <div class="review-summary">
                <div class="review-summary-1">
                    <div class="summary-details">
                        <div class="summary-detail-texts">
                            <h4>Reviews Summary</h4>
                            <div class="average-rating-num">@averageRatingRounded</div>
                            <p class="summary-text">
                                @{
                                    for (var i = 1; i <= 5; i++)
                                    {
                                        if (i <= roundedRating)
                                        {
                                            <span class="starGlowN"></span>
                                        }
                                        else
                                        {
                                            <span class="starFadeN"></span>
                                        }
                                    }
                                }

                            </p>
                            <p class="summary-text">Total Reviews: @totalReviews</p>
                        </div>
                    </div>
                    <div class="ratings-graph">
                        @for (int i = 0; i < 5; i++)
                        {
                            <div class="score-bar">
                                <div class="rating-number">@(i + 1)</div>
                                <div class="rating-bar">
                                    <div class="rating-bar-fill" style="width: @percentages[i]%;"></div>
                                </div>
                            </div>
                        }
                    </div>
                    
                </div>
                <h4 class="review-label">What do you think?</h4>
                    <button class="add-button" id="AddReviewBtn"><p class="button-text">Write a Review</p></button>
                </div>

                <div class="review-contents">
                    <div class="review-content-title">
                        <div class="review-header">
                            <h3>Ratings and Reviews</h3>
                        </div>
                        <button class="add-button" id="ViewReviewsBtn"><p class="button-text">View all</p></button>
                        
                    </div>
                    <div class="user-reviews">
                        @if (ViewData["Reviews"] != null && ((IEnumerable<ASI.Basecode.Data.Models.Review>)ViewData["Reviews"]).Any())
                        {
                            @foreach (var c in ((IEnumerable<ASI.Basecode.Data.Models.Review>)ViewData["Reviews"]).OrderByDescending(c => c.dateReviewed)
                           .Take(5))
                        {
                            <div class="user-review">
                                <div class="reviewer-header">
                                    <span class="reviewer-name">@c.reviewerLastName, @c.reviewerFirstName<i class="review-date">• @c.dateReviewed</i></span>
                                    <div>
                                        @for (var i = 1; i <= c.rating; i++)
                                        {
                                            <span class="starGlowN"></span>
                                        }
                                        @for (var i = c.rating + 1; i <= 5; i++)
                                        {
                                            <span class="starFadeN"></span>
                                        }
                                    </div>
                                </div>
                                <div class="reviewer-email">
                                    @c.reviewerEmail
                                </div>

                                <div class="review-info">
                                    @Html.Raw(c.content.Replace("\n", "<br />"))
                                </div>
                            </div>
                        }
                        }
                        else
                        {
                            <div class="user-review-empty">
                                <div class="review-info">
                                    • • • • • No Reviews yet. Be the first to review!
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
        @await Html.PartialAsync("~/Views/Review/_AddReviewPopup.cshtml", new ASI.Basecode.Services.ServiceModels.ReviewViewModel())
        @await Html.PartialAsync("~/Views/Review/_ViewReviewsPopup.cshtml", new ASI.Basecode.Services.ServiceModels.ReviewViewModel())
    </div>
</div>

<div class="contact-image-background-container">
    <img class="contact-info-image" src="~/img/contact section.png" alt="Contact Info Image" />
</div>
<div class="fifth-white-background">
    <div class="footer-first-col">
        <div class="logo-title">
            <img class="logo" src="~/img/bibliobibuli logo 3.png" />
            <h1>Bibliobibuli.</h1>
        </div>
        <div class="text-line">
            <p>Where Authors and Readers </p>
            <p>Toast to the Art of Literary </p>
            <p>Feasts!</p>

            <div class="contact-info">
                <p><i class="fas fa-envelope"></i> bibliobibuli_inquire@gmail.com</p>
                <p><i class="fas fa-phone"></i> +63 912 3456 789</p>
            </div>
        </div>
    </div>
    <div class="quick-links">
        <p class="text-quick-links">Quick Links</p>
        <div class="second-nav-links">
            <a href="/">Home</a>
            <a href="/Home/Library">Library</a>
        </div>
    </div>
</div>

@section scripts {
    <script>
        // Check for error message and display Toastr notification
        var errorMessage = '@TempData["ErrorMessage"]';
        if (errorMessage) {
            toastr.error(errorMessage);
        }
        var bookId = @Model.bookId;
    </script>
}

<script src="~/js/Review.js"></script>