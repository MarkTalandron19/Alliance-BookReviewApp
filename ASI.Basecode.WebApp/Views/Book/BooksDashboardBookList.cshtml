@using ASI.Basecode.Data.Models;
@model IEnumerable<ASI.Basecode.Data.Models.Book>
@section styles {
    <link rel="stylesheet" href="~/css/admindashboard.css" />
}
@{
    ViewData["Title"]="Book List";
}

<div class="body-main">
    <div class="body-two-section">
        <div class="left-space">
            <div class="left-menu">
                <div>
                    <img class="bibliobibuli-logo" src="~/img/logo-leftaligned.png" />
                    <div class="menu-items">
                        <div class="leftmenu-item-title">
                            <a asp-controller="Book" asp-action="BooksDashboard" class="leftmenu-items">
                                <div class="leftmenu-item active">
                                    <img class="leftmenu-icons" src="~/img/dashboard-icon-active.png" />
                                    Book Management<br />Dashboard
                                </div>
                            </a>
                        </div>
                        <hr class="menu-divider" />
                        @if (User.IsInRole("Bookmaster"))
                        {
                            <a asp-controller="Book" asp-action="BookList" class="leftmenu-items">
                                <div class="leftmenu-item">
                                    <img class="leftmenu-icons" src="~/img/booklist-icon.png" />
                                    Book List
                                </div>
                            </a>
                        }
                        @if (User.IsInRole("Genremaster"))
                        {
                            <a asp-controller="Genre" asp-action="GenreList" class="leftmenu-items">
                                <div class="leftmenu-item">
                                    <img class="leftmenu-icons" src="~/img/booklist-icon.png" />
                                    Genre List
                                </div>
                            </a>
                        }
                        @if (User.IsInRole("Superadmin"))
                        {
                            <a asp-controller="Account" asp-action="UserList" class="leftmenu-items">
                                <div class="leftmenu-item">
                                    <img class="leftmenu-icons" src="~/img/booklist-icon.png" />
                                    User List
                                </div>
                            </a>
                        }
                    </div>
                </div>
                <div>
                    <button class="logout-button">
                        <a asp-controller="Account" asp-action="SignOutUser">
                            <div class="logout-text">
                                <img class="leftmenu-icons" src="~/img/logout-icon.png" />
                                Logout
                            </div>
                        </a>
                    </button>
                </div>
            </div>
        </div>
        <div class="admin-dashboard-list">
            <div class="admin-header">
                <div class="logosec">
                    @*Welcome, @HttpContextAccessor.HttpContext.Session.GetString("UserName")!*@
                    <div class="mr-20 hover-pointer" style="position: relative">
                        <div class="dp">
                            <img src="~/img/profile-logo.png"
                                 class="dpicn hover-pointer"
                                 alt="dp">
                        </div>
                    </div>
                </div>
            </div>
            <div class="dashboard">
                <div class="dashboard-title-div">
                    <p class="dashboard-title">Administrator Book Management Dashboard</p>
                </div>
                <hr class="divider" />

                <div class="book-list">
                    @foreach (var book in Model)
                    {
                        var reviews = ((IEnumerable<ASI.Basecode.Data.Models.Review>)ViewData["Reviews"]).Where(r => r.bookId == book.bookId);
                        var bookgenres = ViewData["BookGenres"] as IEnumerable<ASI.Basecode.Data.Models.BookGenres>;
                        if (bookgenres != null)
                        {
                            bookgenres = bookgenres.Where(bg => bg.bookId == book.bookId);
                        }


                        var totalRatings = 0;
                        var totalReviews = reviews.Count();
                        var ratingsCount = new int[5];
                        var genreIds = string.Join(",", book.BookGenres?.Select(bg => bg.genreId) ?? Enumerable.Empty<string>());

                        foreach (var review in reviews)
                        {
                            totalRatings += review.rating;
                            ratingsCount[review.rating - 1]++;
                        }

                        double[] percentages = new double[5];
                        decimal averageRating = totalReviews > 0 ? (decimal)totalRatings / totalReviews : 0;
                        decimal averageRatingRounded = Math.Round(averageRating, 1);
                        int roundedRating = (int)Math.Round(averageRating);

                        for (int i = 0; i < 5; i++)
                        {
                            percentages[i] = totalReviews > 0 ? ((double)ratingsCount[i] / totalReviews) * 100 : 0;
                        }

                        <a class="books-dashboard-booklist" href="@Url.Action("GetGenresOfBook", "Book",
													new {
														bookId = @book.bookId,
														image = book.image, @book.author ,
														title = book.title,
														synopsis = book.synopsis,
														pubYear = book.pubYear,
														publisher = book.publisher,
														isbn = book.isbn,
														language = book.language })">
                            <div class="book" data-genres="@string.Join(",", book.BookGenres?.Select(bg => bg.genreId) ?? Enumerable.Empty<string>())" data-book-id="@book.bookId">

                                <img src="@book.image" alt="Book Image" class="book-image" />
                                <div class="book-grade">
                                    <div class="book-rating">★ @averageRatingRounded.ToString("0.0")</div>
                                    <div>&nbsp;&nbsp;•</div>
                                    <div class="book-reviews">@totalReviews.ToString("N0") reviews</div>
                                </div>
                                <div class="book-year">@book.pubYear</div>
                                <div class="book-title">@book.title</div>
                                <div class="book-author">@book.publisher</div>
                            </div>
                        </a>
                    }
                </div>
                <div class="paginations">
                    @if (ViewData["TotalPages"] != null && int.TryParse(ViewData["CurrentPage"].ToString(), out int currentPage) && int.TryParse(ViewData["TotalPages"].ToString(), out int totalPages) && totalPages > 1)
                    {
                        <nav aria-label="Books Pagination">
                            <ul class="pagination">
                                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                    <a class="page-link" href="?page=1@(ViewData["SortBy"] != null ? $"&sortBy={ViewData["SortBy"]}" : "")" aria-label="First">
                                        <span aria-hidden="true">&laquo;&laquo;</span>
                                    </a>
                                </li>
                                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                                    <a class="page-link" href="?page=@(currentPage - 1)@(ViewData["SortBy"] != null ? $"&sortBy={ViewData["SortBy"]}" : "")" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>

                                @for (int i = 1; i <= totalPages; i++)
                                {
                                    <li class="page-item @(i == currentPage ? "active" : "")">
                                        <a class="page-link" href="?page=@i@(ViewData["SortBy"] != null ? $"&sortBy={ViewData["SortBy"]}" : "")">@i</a>
                                    </li>
                                }

                                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                    <a class="page-link" href="?page=@(currentPage + 1)@(ViewData["SortBy"] != null ? $"&sortBy={ViewData["SortBy"]}" : "")" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                                    <a class="page-link" href="?page=@totalPages@(ViewData["SortBy"] != null ? $"&sortBy={ViewData["SortBy"]}" : "")" aria-label="Last">
                                        <span aria-hidden="true">&raquo;&raquo;</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script type="text/javascript" src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
<script src="~/js/Book.js"></script>
<script>
</script>

